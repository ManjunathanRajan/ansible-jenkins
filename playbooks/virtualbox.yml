---
- name: Install base software on all
  hosts: all
  gather_facts: yes
  become: yes
  tasks:
    - name: update hosts
      lineinfile:
        path: "/etc/hosts"
        regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        line: "{{ hostvars[item]['ansible_ssh_host'] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        state: present
        backup: yes
      with_items: "{{ ansible_play_batch }}"       
    - name: AdoptOpenJDK yum repository
      yum_repository:
        name: AdoptOpenJDK
        description: AdoptOpenJDK
        baseurl: http://adoptopenjdk.jfrog.io/adoptopenjdk/rpm/centos/$releasever/$basearch
        enabled: yes
        gpgcheck: yes
        gpgkey: https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public
    - name: Endpoint yum repository
      yum_repository:
        name: endpoint
        description: End Point repository
        baseurl: https://packages.endpoint.com/rhel/$releasever/os/$basearch/
        enabled: yes
        gpgcheck: yes
        gpgkey: https://packages.endpoint.com/endpoint-rpmsign-7.pub
    - name: remove any installed git
      yum:
        name: git
        state: absent
    - name: Install fontconfig, AdoptOpenJDK and git
      yum:
        name:
          - fontconfig
          - adoptopenjdk-11-hotspot
          - git
        state: latest
      
- name: Jenkins installation
  hosts: jenkins_controllers
  become: yes
  tasks:
    - name: jenkins yum repository
      yum_repository:
        name: jenkins
        description: Jenkins-stable
        baseurl: http://pkg.jenkins.io/redhat-stable
        enabled: yes
        gpgcheck: yes
        gpgkey: https://pkg.jenkins.io/redhat-stable/jenkins.io.key
    - name: Install Jenkins
      yum:
        name:
          - jenkins
        state: latest
    - name: Create directories for Jenkins
      file:
        path: "{{ item }}"
        state: directory
        owner: jenkins
        group: jenkins
        recurse: yes
      with_items:
        - '/var/cache/jenkins/tmp'
        - '/var/cache/jenkins/heapdumps'
    - name: Update JENKINS_JAVA_OPTIONS
      lineinfile:
        path: "/etc/sysconfig/jenkins"
        regexp: ".*-Djava.awt.headless=true.*"
        line: 'JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true -Djava.io.tmpdir=/var/cache/jenkins/tmp/"'
        state: present
    - name: Update JENKINS_ARGS
      lineinfile:
        path: "/etc/sysconfig/jenkins"
        regexp: ".*JENKINS_ARGS=.*"
        line: 'JENKINS_ARGS="--pluginroot=/var/cache/jenkins/plugins"'
        state: present
    - name: Create limits file
      copy:
        dest: "/etc/security/limits.d/30-jenkins.conf"
        content: |
          jenkins soft core unlimited
          jenkins hard core unlimited
          jenkins soft fsize unlimited
          jenkins hard fsize unlimited
          jenkins soft nofile 4096
          jenkins hard nofile 8192
          jenkins soft nproc 30654
          jenkins hard nproc 30654
    - name: start jenkins service
      systemd:
        name: jenkins
        state: started
      
- name: Agent installation
  hosts: agents
  become: yes
  tasks:
    - name: remove any installed docker
      yum:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: absent
    - name: docker-ce-stable yum repository
      yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
        enabled: yes
        gpgcheck: yes
        gpgkey: https://download.docker.com/linux/centos/gpg
    - name: hashicorp yum repository
      yum_repository:
        name: hashicorp
        description: Hashicorp Stable - $basearch
        baseurl: https://rpm.releases.hashicorp.com/RHEL/$releasever/$basearch/stable
        enabled: yes
        gpgcheck: yes
        gpgkey: https://rpm.releases.hashicorp.com/gpg
    - name: Install Docker, waypoint and unzip
      yum:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - unzip
          - waypoint
        state: latest
    - name: add docker group
      group:
        name: docker
        state: present
    - name: add $USER to docker group
      user: 
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
    - name: start Docker service
      systemd:
        name: docker
        state: started
    - name: create Maven directory
      file: 
        path: "/opt/tools/maven"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: yes
    - name: download Maven 3.6.3
      unarchive:
        src: https://mirrors.sonic.net/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz
        dest: /opt/tools/maven
        remote_src: yes
    - name: create Maven latest symlink
      file: 
        src: /opt/tools/maven/apache-maven-3.6.3
        dest: /opt/tools/maven/latest
        owner: vagrant
        group: vagrant
        state: link
    - name: setup Maven profile
      copy:
        dest: /etc/profile.d/maven.sh
        content: |
          PATH=/opt/tools/maven/latest/bin:$PATH
    - name: create Gradle directory
      file: 
        path: "/opt/tools/gradle"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: yes
    - name: download Gradle 6.6.1
      unarchive:
        src: https://services.gradle.org/distributions/gradle-6.6.1-bin.zip
        dest: /opt/tools/gradle
        remote_src: yes
    - name: create Gradle latest symlink
      file: 
        src: /opt/tools/gradle/gradle-6.6.1
        dest: /opt/tools/gradle/latest
        owner: vagrant
        group: vagrant
        state: link
    - name: setup Gradle profile
      copy:
        dest: /etc/profile.d/gradle.sh
        content: |
          PATH=/opt/tools/gradle/latest/bin:$PATH
    - name: set final ownership to /opt/tools
      file: 
        path: "/opt/tools"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: yes
    